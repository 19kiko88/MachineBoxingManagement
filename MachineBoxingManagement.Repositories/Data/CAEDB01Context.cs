// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using MachineBoxingManagement.Repositories.Models;

namespace MachineBoxingManagement.Repositories.Data
{
    public partial class CAEDB01Context : DbContext
    {
        public CAEDB01Context()
        {
        }

        public CAEDB01Context(DbContextOptions<CAEDB01Context> options)
            : base(options)
        {
        }

        public virtual DbSet<BoxingLocation> BoxingLocation { get; set; }
        public virtual DbSet<BoxingNameEqmMap> BoxingNameEqmMap { get; set; }
        public virtual DbSet<BoxingOption> BoxingOption { get; set; }
        public virtual DbSet<BoxingSeriesRule> BoxingSeriesRule { get; set; }
        public virtual DbSet<BoxingStageRule> BoxingStageRule { get; set; }
        public virtual DbSet<BoxingStatus> BoxingStatus { get; set; }
        public virtual DbSet<BoxingStyle> BoxingStyle { get; set; }
        public virtual DbSet<MachineBoxingInfo> MachineBoxingInfo { get; set; }
        public virtual DbSet<MachineConfirmHistory> MachineConfirmHistory { get; set; }
        public virtual DbSet<OaSpec> OaSpec { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasPostgresExtension("adminpack")
                .HasPostgresExtension("citext");

            modelBuilder.Entity<BoxingLocation>(entity =>
            {
                entity.ToTable("BoxingLocation", "MachineStockManagement");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<BoxingNameEqmMap>(entity =>
            {
                entity.ToTable("BoxingNameEqmMap", "MachineStockManagement");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EqmWarehouse).HasMaxLength(100);

                entity.Property(e => e.EqmWorkId)
                    .HasColumnName("EqmWorkID")
                    .HasMaxLength(20);

                entity.Property(e => e.Rule)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<BoxingOption>(entity =>
            {
                entity.ToTable("BoxingOption", "MachineStockManagement");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.Remark).HasMaxLength(255);
            });

            modelBuilder.Entity<BoxingSeriesRule>(entity =>
            {
                entity.HasKey(e => e.Name)
                    .HasName("_BoxingSeriesRule__pk");

                entity.ToTable("BoxingSeriesRule", "MachineStockManagement");

                entity.Property(e => e.Name).HasMaxLength(20);

                entity.Property(e => e.Rule)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<BoxingStageRule>(entity =>
            {
                entity.HasKey(e => e.Name)
                    .HasName("_BoxingStageRule__pk");

                entity.ToTable("BoxingStageRule", "MachineStockManagement");

                entity.Property(e => e.Name).HasMaxLength(10);

                entity.Property(e => e.Rule)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<BoxingStatus>(entity =>
            {
                entity.ToTable("BoxingStatus", "MachineStockManagement");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<BoxingStyle>(entity =>
            {
                entity.ToTable("BoxingStyle", "MachineStockManagement");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<MachineBoxingInfo>(entity =>
            {
                entity.ToTable("MachineBoxingInfo", "MachineStockManagement");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BoxingLocationId).HasColumnName("BoxingLocationID");

                entity.Property(e => e.BoxingName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasDefaultValueSql("''::character varying");

                entity.Property(e => e.BoxingOptionId)
                    .HasColumnName("BoxingOptionID")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.BoxingStyleId)
                    .HasColumnName("BoxingStyleID")
                    .HasDefaultValueSql("1");

                entity.Property(e => e.OperateTime).HasDefaultValueSql("now()");

                entity.Property(e => e.Operator)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PartNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Ssn)
                    .HasColumnName("SSN")
                    .HasMaxLength(50);

                entity.Property(e => e.StatusId).HasColumnName("StatusID");

                entity.Property(e => e.TakeOutor).HasMaxLength(50);

                entity.HasOne(d => d.BoxingLocation)
                    .WithMany(p => p.MachineBoxingInfo)
                    .HasForeignKey(d => d.BoxingLocationId)
                    .HasConstraintName("_MachineBoxingInfo__FK_4");

                entity.HasOne(d => d.BoxingOption)
                    .WithMany(p => p.MachineBoxingInfo)
                    .HasForeignKey(d => d.BoxingOptionId)
                    .HasConstraintName("_MachineBoxingInfo__FK_1");

                entity.HasOne(d => d.BoxingStyle)
                    .WithMany(p => p.MachineBoxingInfo)
                    .HasForeignKey(d => d.BoxingStyleId)
                    .HasConstraintName("machineboxinginfo_fk5");

                entity.HasOne(d => d.Status)
                    .WithMany(p => p.MachineBoxingInfo)
                    .HasForeignKey(d => d.StatusId)
                    .HasConstraintName("_MachineBoxingInfo__FK_3");
            });

            modelBuilder.Entity<MachineConfirmHistory>(entity =>
            {
                entity.ToTable("MachineConfirmHistory", "MachineStockManagement");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CanTeardown).HasMaxLength(1);

                entity.Property(e => e.PartNumber)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.ProjectLeader).HasMaxLength(50);

                entity.Property(e => e.ToOa)
                    .HasColumnName("ToOA")
                    .HasMaxLength(1);

                entity.Property(e => e.UpdateTime).HasDefaultValueSql("now()");
            });

            modelBuilder.Entity<OaSpec>(entity =>
            {
                entity.HasKey(e => e.PartNumber)
                    .HasName("oaspec_pk");

                entity.ToTable("OaSpec", "MachineStockManagement");

                entity.Property(e => e.PartNumber).HasMaxLength(50);

                entity.Property(e => e.Camera).HasMaxLength(1);

                entity.Property(e => e.Category).HasMaxLength(20);

                entity.Property(e => e.Cpu).HasMaxLength(20);

                entity.Property(e => e.CpuSpec).HasMaxLength(20);

                entity.Property(e => e.DiscreteGpu).HasMaxLength(1);

                entity.Property(e => e.HddSize).HasMaxLength(20);

                entity.Property(e => e.Mbresale)
                    .HasColumnName("MBResale")
                    .HasMaxLength(1);

                entity.Property(e => e.MemorySize).HasMaxLength(20);

                entity.Property(e => e.MisDriverDate).HasColumnType("date");

                entity.Property(e => e.PanelSize).HasMaxLength(20);

                entity.Property(e => e.SsdSize).HasMaxLength(20);

                entity.Property(e => e.UpdateTime).HasDefaultValueSql("now()");

                entity.Property(e => e.Updater)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasDefaultValueSql("'default'::character varying");

                entity.Property(e => e.Weight).HasColumnType("numeric");
            });

            modelBuilder.HasSequence("BoxingName_ID_seq", "MachineStockManagement")
                .StartsAt(34)
                .HasMax(2147483647);

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}